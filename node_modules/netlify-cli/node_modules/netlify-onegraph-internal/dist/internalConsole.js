"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.registerConsole = exports.internalConsole = void 0;
/**
 * Silently discard all console log output.
 * @param data
 * @returns
 */
var silentDefaultLog = function log() {
    var data = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        data[_i] = arguments[_i];
    }
    return;
};
/**
 * Silently discard all console warn output.
 * @param data
 * @returns
 */
var silentDefaultWarn = function warn() {
    var data = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        data[_i] = arguments[_i];
    }
    return;
};
/**
 * Silently discard all console error output.
 * @param data
 * @returns
 */
var silentDefaultError = function error() {
    var data = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        data[_i] = arguments[_i];
    }
    return;
};
/**
 * Silently discard all console debug output.
 * @param data
 * @returns
 */
var silentDefaultDebug = function error() {
    var data = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        data[_i] = arguments[_i];
    }
    return;
};
/**
 * The default console log function, used when no console is provided.
 * Silently discards all console log output.
 */
var silentConsole = {
    log: silentDefaultLog,
    warn: silentDefaultWarn,
    error: silentDefaultError,
    debug: silentDefaultDebug,
};
/**
 * The set of console log functions actually used internally.
 */
exports.internalConsole = __assign({}, silentConsole);
/**
 * Registers a set of functions to be used as the console. By default, the console is silent.
 * @param {InternalConsole} newConsole The set of console functions to use
 */
function registerConsole(newConsole) {
    exports.internalConsole = newConsole;
}
exports.registerConsole = registerConsole;
//# sourceMappingURL=internalConsole.js.map