"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = require("fs");
var graphql_1 = require("graphql");
var index_1 = require("./index");
var test = function () {
    var sourceGraphQLFilename = "./tests/assets/netlifyGraphOperationsLibrary.graphql";
    var schemaGraphQLFilename = "./tests/assets/netlifyGraphSchema.graphql";
    var sourceGraphQLFile = (0, fs_1.readFileSync)(sourceGraphQLFilename, "utf8");
    var schemaGraphQLFile = (0, fs_1.readFileSync)(schemaGraphQLFilename, "utf8");
    var schema = (0, graphql_1.buildASTSchema)((0, graphql_1.parse)(schemaGraphQLFile));
    var parsedDoc = (0, graphql_1.parse)(sourceGraphQLFile);
    var _a = index_1.NetlifyGraph.extractFunctionsFromOperationDoc(parsedDoc), functions = _a.functions, fragments = _a.fragments;
    var netlifyGraphConfig = {
        netlifyGraphPath: ["..", "..", "lib", "netlifyGraph"],
        framework: "Next.js",
        webhookBasePath: "/api",
        functionsPath: ["pages", "api"],
        graphQLOperationsSourceFilename: [
            "..",
            "..",
            "lib",
            "netlifyGraphOperationsLibrary.graphql",
        ],
        graphQLSchemaFilename: ["..", "..", "lib", "netlifyGraphSchema.graphql"],
        netlifyGraphImplementationFilename: ["..", "..", "lib", "index.js"],
        netlifyGraphTypeDefinitionsFilename: ["..", "..", "lib", "index.d.ts"],
        netlifyGraphRequirePath: ["..", "..", "lib", "netlifyGraph"],
        extension: "ts",
        moduleType: "esm",
        language: "typescript",
        runtimeTargetEnv: "node",
    };
    var result = index_1.NetlifyGraph.generateFunctionsSource(netlifyGraphConfig, schema, sourceGraphQLFile, functions, fragments);
    if (!result) {
        throw new Error("result is undefined");
    }
    var clientSource = result.clientSource, typeDefinitionsSource = result.typeDefinitionsSource;
    console.log(typeDefinitionsSource);
};
test();
//# sourceMappingURL=runtime.test.js.map