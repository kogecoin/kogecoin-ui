import { FragmentDefinitionNode, GraphQLSchema, OperationDefinitionNode } from "graphql";
import { NetlifyGraphConfig } from "../netlifyGraph";
export declare const munge: (name: any) => any;
export declare type NamedExportedFile = {
    kind: "NamedExportedFile";
    name: string[];
    content: string;
};
export declare type UnnamedExportedFile = {
    kind: "UnnamedExportedFile";
    content: string;
};
export declare type ExportedFile = NamedExportedFile | UnnamedExportedFile;
export declare type ExporterResult = {
    exportedFiles: ExportedFile[];
    language: string;
};
export declare type FrameworkGenerator = (opts: {
    operationDataList: OperationData[];
    netlifyGraphConfig: NetlifyGraphConfig;
    options: Record<string, boolean>;
    schema: GraphQLSchema;
}) => ExporterResult;
export declare type SnippetOption = {
    id: string;
    label: string;
    initial: boolean;
};
export declare type SnippetGeneratorWithMeta = {
    language: string;
    codeMirrorMode: string;
    name: string;
    options: SnippetOption[];
    generate: FrameworkGenerator;
};
export declare type OperationDataList = {
    operationDefinitions: (OperationDefinitionNode | FragmentDefinitionNode)[];
    fragmentDefinitions: FragmentDefinitionNode[];
    operationDataList: OperationData[];
    rawOperationDataList: OperationData[];
};
export declare type OperationData = {
    query: string;
    name: string;
    displayName: string;
    type: string;
    variables: {
        [key: string]: string;
    };
    operationDefinition: OperationDefinitionNode | FragmentDefinitionNode;
    fragmentDependencies: FragmentDefinitionNode[];
};
