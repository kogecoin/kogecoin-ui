"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setupUpLinks = setupUpLinks;
exports.updateVersionsHiddenUpLink = updateVersionsHiddenUpLink;

var _upStorage = _interopRequireDefault(require("./up-storage"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Set up the Up Storage for each link.
 */
function setupUpLinks(config) {
  const uplinks = {};

  for (const uplinkName in config.uplinks) {
    if (Object.prototype.hasOwnProperty.call(config.uplinks, uplinkName)) {
      // instance for each up-link definition
      const proxy = new _upStorage.default(config.uplinks[uplinkName], config);
      proxy.upname = uplinkName;
      uplinks[uplinkName] = proxy;
    }
  }

  return uplinks;
}

function updateVersionsHiddenUpLink(versions, upLink) {
  for (const i in versions) {
    if (Object.prototype.hasOwnProperty.call(versions, i)) {
      const version = versions[i]; // holds a "hidden" value to be used by the package storage.
      // $FlowFixMe

      version[Symbol.for('__verdaccio_uplink')] = upLink.upname;
    }
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvdXBsaW5rLXV0aWwudHMiXSwibmFtZXMiOlsic2V0dXBVcExpbmtzIiwiY29uZmlnIiwidXBsaW5rcyIsInVwbGlua05hbWUiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJwcm94eSIsIlByb3h5U3RvcmFnZSIsInVwbmFtZSIsInVwZGF0ZVZlcnNpb25zSGlkZGVuVXBMaW5rIiwidmVyc2lvbnMiLCJ1cExpbmsiLCJpIiwidmVyc2lvbiIsIlN5bWJvbCIsImZvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFHQTs7OztBQUVBO0FBQ0E7QUFDQTtBQUNPLFNBQVNBLFlBQVQsQ0FBc0JDLE1BQXRCLEVBQWlEO0FBQ3RELFFBQU1DLE9BQWtCLEdBQUcsRUFBM0I7O0FBRUEsT0FBSyxNQUFNQyxVQUFYLElBQXlCRixNQUFNLENBQUNDLE9BQWhDLEVBQXlDO0FBQ3ZDLFFBQUlFLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkMsY0FBakIsQ0FBZ0NDLElBQWhDLENBQXFDTixNQUFNLENBQUNDLE9BQTVDLEVBQXFEQyxVQUFyRCxDQUFKLEVBQXNFO0FBQ3BFO0FBQ0EsWUFBTUssS0FBYSxHQUFHLElBQUlDLGtCQUFKLENBQWlCUixNQUFNLENBQUNDLE9BQVAsQ0FBZUMsVUFBZixDQUFqQixFQUE2Q0YsTUFBN0MsQ0FBdEI7QUFDQU8sTUFBQUEsS0FBSyxDQUFDRSxNQUFOLEdBQWVQLFVBQWY7QUFFQUQsTUFBQUEsT0FBTyxDQUFDQyxVQUFELENBQVAsR0FBc0JLLEtBQXRCO0FBQ0Q7QUFDRjs7QUFFRCxTQUFPTixPQUFQO0FBQ0Q7O0FBRU0sU0FBU1MsMEJBQVQsQ0FBb0NDLFFBQXBDLEVBQXdEQyxNQUF4RCxFQUE4RTtBQUNuRixPQUFLLE1BQU1DLENBQVgsSUFBZ0JGLFFBQWhCLEVBQTBCO0FBQ3hCLFFBQUlSLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkMsY0FBakIsQ0FBZ0NDLElBQWhDLENBQXFDSyxRQUFyQyxFQUErQ0UsQ0FBL0MsQ0FBSixFQUF1RDtBQUNyRCxZQUFNQyxPQUFPLEdBQUdILFFBQVEsQ0FBQ0UsQ0FBRCxDQUF4QixDQURxRCxDQUdyRDtBQUNBOztBQUNBQyxNQUFBQSxPQUFPLENBQUNDLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLG9CQUFYLENBQUQsQ0FBUCxHQUE0Q0osTUFBTSxDQUFDSCxNQUFuRDtBQUNEO0FBQ0Y7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbmZpZywgVmVyc2lvbnMgfSBmcm9tICdAdmVyZGFjY2lvL3R5cGVzJztcblxuaW1wb3J0IHsgSVByb3h5LCBQcm94eUxpc3QgfSBmcm9tICcuLi8uLi90eXBlcyc7XG5pbXBvcnQgUHJveHlTdG9yYWdlIGZyb20gJy4vdXAtc3RvcmFnZSc7XG5cbi8qKlxuICogU2V0IHVwIHRoZSBVcCBTdG9yYWdlIGZvciBlYWNoIGxpbmsuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXR1cFVwTGlua3MoY29uZmlnOiBDb25maWcpOiBQcm94eUxpc3Qge1xuICBjb25zdCB1cGxpbmtzOiBQcm94eUxpc3QgPSB7fTtcblxuICBmb3IgKGNvbnN0IHVwbGlua05hbWUgaW4gY29uZmlnLnVwbGlua3MpIHtcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGNvbmZpZy51cGxpbmtzLCB1cGxpbmtOYW1lKSkge1xuICAgICAgLy8gaW5zdGFuY2UgZm9yIGVhY2ggdXAtbGluayBkZWZpbml0aW9uXG4gICAgICBjb25zdCBwcm94eTogSVByb3h5ID0gbmV3IFByb3h5U3RvcmFnZShjb25maWcudXBsaW5rc1t1cGxpbmtOYW1lXSwgY29uZmlnKTtcbiAgICAgIHByb3h5LnVwbmFtZSA9IHVwbGlua05hbWU7XG5cbiAgICAgIHVwbGlua3NbdXBsaW5rTmFtZV0gPSBwcm94eTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdXBsaW5rcztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZVZlcnNpb25zSGlkZGVuVXBMaW5rKHZlcnNpb25zOiBWZXJzaW9ucywgdXBMaW5rOiBJUHJveHkpOiB2b2lkIHtcbiAgZm9yIChjb25zdCBpIGluIHZlcnNpb25zKSB7XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh2ZXJzaW9ucywgaSkpIHtcbiAgICAgIGNvbnN0IHZlcnNpb24gPSB2ZXJzaW9uc1tpXTtcblxuICAgICAgLy8gaG9sZHMgYSBcImhpZGRlblwiIHZhbHVlIHRvIGJlIHVzZWQgYnkgdGhlIHBhY2thZ2Ugc3RvcmFnZS5cbiAgICAgIC8vICRGbG93Rml4TWVcbiAgICAgIHZlcnNpb25bU3ltYm9sLmZvcignX192ZXJkYWNjaW9fdXBsaW5rJyldID0gdXBMaW5rLnVwbmFtZTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==