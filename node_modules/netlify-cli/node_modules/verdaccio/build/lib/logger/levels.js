"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.calculateLevel = calculateLevel;
exports.subSystemLevels = exports.levelsColors = void 0;

var _kleur = require("kleur");

function calculateLevel(levelCode) {
  switch (true) {
    case levelCode === 10:
      return 'trace';

    case levelCode === 20:
      return 'debug';

    case levelCode === 25:
      return 'http';

    case levelCode === 30:
      return 'info';

    case levelCode === 40:
      return 'warn';

    case levelCode === 50:
      return 'error';

    case levelCode === 60:
      return 'fatal';

    default:
      return 'fatal';
  }
}

const levelsColors = {
  fatal: _kleur.red,
  error: _kleur.red,
  warn: _kleur.yellow,
  http: _kleur.magenta,
  info: _kleur.cyan,
  debug: _kleur.green,
  trace: _kleur.white
};
exports.levelsColors = levelsColors;
var ARROWS;

(function (ARROWS) {
  ARROWS["LEFT"] = "<--";
  ARROWS["RIGHT"] = "-->";
  ARROWS["EQUAL"] = "-=-";
  ARROWS["NEUTRAL"] = "---";
})(ARROWS || (ARROWS = {}));

const subSystemLevels = {
  color: {
    in: (0, _kleur.green)(ARROWS.LEFT),
    out: (0, _kleur.yellow)(ARROWS.RIGHT),
    fs: (0, _kleur.black)(ARROWS.EQUAL),
    default: (0, _kleur.blue)(ARROWS.NEUTRAL)
  },
  white: {
    in: ARROWS.LEFT,
    out: ARROWS.RIGHT,
    fs: ARROWS.EQUAL,
    default: ARROWS.NEUTRAL
  }
};
exports.subSystemLevels = subSystemLevels;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvbG9nZ2VyL2xldmVscy50cyJdLCJuYW1lcyI6WyJjYWxjdWxhdGVMZXZlbCIsImxldmVsQ29kZSIsImxldmVsc0NvbG9ycyIsImZhdGFsIiwicmVkIiwiZXJyb3IiLCJ3YXJuIiwieWVsbG93IiwiaHR0cCIsIm1hZ2VudGEiLCJpbmZvIiwiY3lhbiIsImRlYnVnIiwiZ3JlZW4iLCJ0cmFjZSIsIndoaXRlIiwiQVJST1dTIiwic3ViU3lzdGVtTGV2ZWxzIiwiY29sb3IiLCJpbiIsIkxFRlQiLCJvdXQiLCJSSUdIVCIsImZzIiwiRVFVQUwiLCJkZWZhdWx0IiwiTkVVVFJBTCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFNTyxTQUFTQSxjQUFULENBQXdCQyxTQUF4QixFQUF3RDtBQUM3RCxVQUFRLElBQVI7QUFDRSxTQUFLQSxTQUFTLEtBQUssRUFBbkI7QUFDRSxhQUFPLE9BQVA7O0FBQ0YsU0FBS0EsU0FBUyxLQUFLLEVBQW5CO0FBQ0UsYUFBTyxPQUFQOztBQUNGLFNBQUtBLFNBQVMsS0FBSyxFQUFuQjtBQUNFLGFBQU8sTUFBUDs7QUFDRixTQUFLQSxTQUFTLEtBQUssRUFBbkI7QUFDRSxhQUFPLE1BQVA7O0FBQ0YsU0FBS0EsU0FBUyxLQUFLLEVBQW5CO0FBQ0UsYUFBTyxNQUFQOztBQUNGLFNBQUtBLFNBQVMsS0FBSyxFQUFuQjtBQUNFLGFBQU8sT0FBUDs7QUFDRixTQUFLQSxTQUFTLEtBQUssRUFBbkI7QUFDRSxhQUFPLE9BQVA7O0FBQ0Y7QUFDRSxhQUFPLE9BQVA7QUFoQko7QUFrQkQ7O0FBRU0sTUFBTUMsWUFBWSxHQUFHO0FBQzFCQyxFQUFBQSxLQUFLLEVBQUVDLFVBRG1CO0FBRTFCQyxFQUFBQSxLQUFLLEVBQUVELFVBRm1CO0FBRzFCRSxFQUFBQSxJQUFJLEVBQUVDLGFBSG9CO0FBSTFCQyxFQUFBQSxJQUFJLEVBQUVDLGNBSm9CO0FBSzFCQyxFQUFBQSxJQUFJLEVBQUVDLFdBTG9CO0FBTTFCQyxFQUFBQSxLQUFLLEVBQUVDLFlBTm1CO0FBTzFCQyxFQUFBQSxLQUFLLEVBQUVDO0FBUG1CLENBQXJCOztJQVVGQyxNOztXQUFBQSxNO0FBQUFBLEVBQUFBLE07QUFBQUEsRUFBQUEsTTtBQUFBQSxFQUFBQSxNO0FBQUFBLEVBQUFBLE07R0FBQUEsTSxLQUFBQSxNOztBQU9FLE1BQU1DLGVBQWUsR0FBRztBQUM3QkMsRUFBQUEsS0FBSyxFQUFFO0FBQ0xDLElBQUFBLEVBQUUsRUFBRSxrQkFBTUgsTUFBTSxDQUFDSSxJQUFiLENBREM7QUFFTEMsSUFBQUEsR0FBRyxFQUFFLG1CQUFPTCxNQUFNLENBQUNNLEtBQWQsQ0FGQTtBQUdMQyxJQUFBQSxFQUFFLEVBQUUsa0JBQU1QLE1BQU0sQ0FBQ1EsS0FBYixDQUhDO0FBSUxDLElBQUFBLE9BQU8sRUFBRSxpQkFBS1QsTUFBTSxDQUFDVSxPQUFaO0FBSkosR0FEc0I7QUFPN0JYLEVBQUFBLEtBQUssRUFBRTtBQUNMSSxJQUFBQSxFQUFFLEVBQUVILE1BQU0sQ0FBQ0ksSUFETjtBQUVMQyxJQUFBQSxHQUFHLEVBQUVMLE1BQU0sQ0FBQ00sS0FGUDtBQUdMQyxJQUFBQSxFQUFFLEVBQUVQLE1BQU0sQ0FBQ1EsS0FITjtBQUlMQyxJQUFBQSxPQUFPLEVBQUVULE1BQU0sQ0FBQ1U7QUFKWDtBQVBzQixDQUF4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJsYWNrLCBibHVlLCBjeWFuLCBncmVlbiwgbWFnZW50YSwgcmVkLCB3aGl0ZSwgeWVsbG93IH0gZnJvbSAna2xldXInO1xuXG5leHBvcnQgdHlwZSBMb2dMZXZlbCA9ICd0cmFjZScgfCAnZGVidWcnIHwgJ2luZm8nIHwgJ2h0dHAnIHwgJ3dhcm4nIHwgJ2Vycm9yJyB8ICdmYXRhbCc7XG5cbmV4cG9ydCB0eXBlIExldmVsQ29kZSA9IG51bWJlcjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNhbGN1bGF0ZUxldmVsKGxldmVsQ29kZTogTGV2ZWxDb2RlKTogTG9nTGV2ZWwge1xuICBzd2l0Y2ggKHRydWUpIHtcbiAgICBjYXNlIGxldmVsQ29kZSA9PT0gMTA6XG4gICAgICByZXR1cm4gJ3RyYWNlJztcbiAgICBjYXNlIGxldmVsQ29kZSA9PT0gMjA6XG4gICAgICByZXR1cm4gJ2RlYnVnJztcbiAgICBjYXNlIGxldmVsQ29kZSA9PT0gMjU6XG4gICAgICByZXR1cm4gJ2h0dHAnO1xuICAgIGNhc2UgbGV2ZWxDb2RlID09PSAzMDpcbiAgICAgIHJldHVybiAnaW5mbyc7XG4gICAgY2FzZSBsZXZlbENvZGUgPT09IDQwOlxuICAgICAgcmV0dXJuICd3YXJuJztcbiAgICBjYXNlIGxldmVsQ29kZSA9PT0gNTA6XG4gICAgICByZXR1cm4gJ2Vycm9yJztcbiAgICBjYXNlIGxldmVsQ29kZSA9PT0gNjA6XG4gICAgICByZXR1cm4gJ2ZhdGFsJztcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuICdmYXRhbCc7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGxldmVsc0NvbG9ycyA9IHtcbiAgZmF0YWw6IHJlZCxcbiAgZXJyb3I6IHJlZCxcbiAgd2FybjogeWVsbG93LFxuICBodHRwOiBtYWdlbnRhLFxuICBpbmZvOiBjeWFuLFxuICBkZWJ1ZzogZ3JlZW4sXG4gIHRyYWNlOiB3aGl0ZSxcbn07XG5cbmVudW0gQVJST1dTIHtcbiAgTEVGVCA9ICc8LS0nLFxuICBSSUdIVCA9ICctLT4nLFxuICBFUVVBTCA9ICctPS0nLFxuICBORVVUUkFMID0gJy0tLScsXG59XG5cbmV4cG9ydCBjb25zdCBzdWJTeXN0ZW1MZXZlbHMgPSB7XG4gIGNvbG9yOiB7XG4gICAgaW46IGdyZWVuKEFSUk9XUy5MRUZUKSxcbiAgICBvdXQ6IHllbGxvdyhBUlJPV1MuUklHSFQpLFxuICAgIGZzOiBibGFjayhBUlJPV1MuRVFVQUwpLFxuICAgIGRlZmF1bHQ6IGJsdWUoQVJST1dTLk5FVVRSQUwpLFxuICB9LFxuICB3aGl0ZToge1xuICAgIGluOiBBUlJPV1MuTEVGVCxcbiAgICBvdXQ6IEFSUk9XUy5SSUdIVCxcbiAgICBmczogQVJST1dTLkVRVUFMLFxuICAgIGRlZmF1bHQ6IEFSUk9XUy5ORVVUUkFMLFxuICB9LFxufTtcbiJdfQ==