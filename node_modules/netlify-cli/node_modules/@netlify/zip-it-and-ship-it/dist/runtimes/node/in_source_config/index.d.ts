import { ArgumentPlaceholder, Expression, SpreadElement, JSXNamespacedName } from '@babel/types';
import { parse as parseSchedule } from './properties/schedule';
declare const IN_SOURCE_CONFIG_MODULE = "@netlify/functions";
declare type ISCValues = Partial<ReturnType<typeof parseSchedule>>;
declare const findISCDeclarationsInPath: (sourcePath: string) => Promise<ISCValues>;
declare type ISCHandlerArg = ArgumentPlaceholder | Expression | SpreadElement | JSXNamespacedName;
interface ISCExport {
    local: string;
    args: ISCHandlerArg[];
}
export { findISCDeclarationsInPath, IN_SOURCE_CONFIG_MODULE };
export type { ISCExport, ISCHandlerArg, ISCValues };
