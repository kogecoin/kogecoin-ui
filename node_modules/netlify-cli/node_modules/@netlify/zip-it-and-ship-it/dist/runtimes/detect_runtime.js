"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.detectBinaryRuntime = void 0;
const elf_cam_1 = require("elf-cam");
const fs_1 = require("../utils/fs");
// Try to guess the runtime by inspecting the binary file.
const detectBinaryRuntime = async function ({ fsCache, path, }) {
    try {
        const buffer = await (0, fs_1.cachedReadFile)(fsCache, path);
        // We're using the Type Assertion because the `cachedReadFile` abstraction
        // loses part of the return type information. We can safely say it's a
        // Buffer in this case because we're not specifying an encoding.
        const binaryType = (0, elf_cam_1.detect)(buffer);
        switch (binaryType) {
            case elf_cam_1.Runtime.Go:
                return 'go';
            case elf_cam_1.Runtime.Rust:
                return 'rs';
            default:
                return undefined;
        }
    }
    catch { }
};
exports.detectBinaryRuntime = detectBinaryRuntime;
//# sourceMappingURL=detect_runtime.js.map